#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è VS Code GraphQL —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
"""

import requests
import json
import base64
import os

def get_jwt_token(username, password):
    """–ü–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω"""
    auth_url = 'https://01.tomorrow-school.ai/api/auth/signin'
    
    credentials = base64.b64encode(f"{username}:{password}".encode()).decode()
    
    headers = {
        'Authorization': f'Basic {credentials}',
        'Content-Type': 'application/json'
    }
    
    try:
        response = requests.post(auth_url, headers=headers)
        response.raise_for_status()
        
        data = response.json()
        
        if isinstance(data, str):
            return data
        else:
            return data.get('token') or data.get('access_token') or data.get('jwt')
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
        return None

def create_env_file(token):
    """–°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º"""
    env_content = f"GRAPHQL_TOKEN={token}\n"
    
    with open('.env', 'w') as f:
        f.write(env_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env —Å —Ç–æ–∫–µ–Ω–æ–º")
    print("üîß –¢–µ–ø–µ—Ä—å VS Code GraphQL —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω")

def main():
    print("üîë –ü–æ–ª—É—á–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è VS Code GraphQL")
    print("=" * 50)
    
    username = input("–í–≤–µ–¥–∏—Ç–µ username/email: ")
    password = input("–í–≤–µ–¥–∏—Ç–µ password: ")
    
    token = get_jwt_token(username, password)
    
    if token:
        print("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"–¢–æ–∫–µ–Ω: {token[:50]}...")
        
        create_env_file(token)
        
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ VS Code")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ 'GraphQL' –æ—Ç Prisma")
        print("3. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª queries.graphql")
        print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å 'GetUserInfo'")
        
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω")

if __name__ == "__main__":
    main()
