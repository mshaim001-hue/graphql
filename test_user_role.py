#!/usr/bin/env python3
import os
import requests
import json

def load_token():
    try:
        with open('.env', 'r') as f:
            for line in f:
                if line.startswith('GRAPHQL_TOKEN='):
                    return line.split('=', 1)[1].strip().strip('"')
    except FileNotFoundError:
        print("–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None

def test_user_role():
    token = load_token()
    if not token:
        return
    
    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json'
    }
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å role
    query1 = """
    query {
        role {
            id
            name
            description
            slug
        }
    }
    """
    
    queries = [
        (query1, "–ü–†–û–°–¢–û–ô –ó–ê–ü–†–û–° role")
    ]
    
    for query, description in queries:
        print(f"\n{'='*60}")
        print(f"üîç {description}")
        print(f"{'='*60}")
        
        response = requests.post(
            'https://01.tomorrow-school.ai/api/graphql-engine/v1/graphql',
            json={'query': query},
            headers=headers
        )
        
        if response.status_code == 200:
            data = response.json()
            if 'errors' in data:
                print("‚ùå –û—à–∏–±–∫–∏ GraphQL:")
                for error in data['errors']:
                    print(f"   - {error['message']}")
            else:
                roles = data['data']['role']
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(roles)} –∑–∞–ø–∏—Å–µ–π role")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
                filename = f"role_data_{len(roles)}_items.json"
                with open(filename, 'w', encoding='utf-8') as f:
                    json.dump(roles, f, indent=2, ensure_ascii=False)
                
                print(f"üìÅ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {filename}")
                print(f"üìä –ü–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π:")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
                for i, role in enumerate(roles[:5], 1):
                    print(f"\n--- Role #{i} ---")
                    print(f"ID: {role.get('id', 'N/A')}")
                    print(f"Name: {role.get('name', 'N/A')}")
                    print(f"Description: {role.get('description', 'N/A')}")
                
                if len(roles) > 5:
                    print(f"\n... –∏ –µ—â–µ {len(roles) - 5} –∑–∞–ø–∏—Å–µ–π –≤ —Ñ–∞–π–ª–µ {filename}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")

if __name__ == "__main__":
    test_user_role()
